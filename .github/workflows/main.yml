name: FastAPI CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      working-directory: ./video-back
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-asyncio httpx

    - name: Create test directory and basic test
      working-directory: ./video-back
      run: |
        mkdir -p tests
        echo 'import pytest
        import sys
        from pathlib import Path

        # Add the project root directory to Python path
        project_root = Path(__file__).parent
        sys.path.append(str(project_root))

        from fastapi.testclient import TestClient
        from app.main import app

        @pytest.fixture
        def client():
            return TestClient(app)

        def test_read_main(client):
            response = client.get("/")
            assert response.status_code == 200
            assert response.json() == {"message": "Welcome to FastAPI with PostgreSQL!"}

        def test_health_check(client):
            response = client.get("/health")
            assert response.status_code == 200
            assert response.json() == {"status": "healthy"}' > tests/test_main.py

    - name: Create conftest.py
      working-directory: ./video-back
      run: |
        echo 'import pytest
        import sys
        from pathlib import Path

        # Add the project root directory to Python path
        project_root = Path(__file__).parent
        sys.path.append(str(project_root))' > tests/conftest.py

    - name: Run tests
      working-directory: ./video-back
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: "test_secret_key"
        ALGORITHM: "HS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: "30"
        PYTHONPATH: ${{ github.workspace }}/video-back
      run: |
        pytest tests/ --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: always()

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      working-directory: ./video-back
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Add your deployment steps here
    # For example, if deploying to Heroku:
    # - uses: akhileshns/heroku-deploy@v3.12.12
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: "your-app-name"
    #     heroku_email: "your-email@example.com"